" english auto change
let keep_input_source_in_normal=[ABC]
let keep_input_source_in_normal=ABC

set keep-english-in-normal-and-restore-in-insert
let mapleader = " "
set ignorecase
set smartcase
" 3 lines above/below cursor when scrolling
set scrolloff=3
set clipboard=unnamed

set highlightedyank
set NERDTree
set surround
set multiple-cursors
set easymotion
set quickscope " 한줄에서 빠르게 단어찾기 f F
set sneak

"vim highlightedyank
let g:highlightedyank_highlight_duration = "1000"

set number relativenumber
set ignorecase
set smartcase
set expandtab
set autoindent
set hlsearch
set incsearch
set ideajoin
set mouse=a
set idearefactormode=keep
app mousefocus
set scollfocus

" zen mode"
noremap <leader>kz :action ToggleZenMode<CR>
noremap H ^
noremap L $

" toggle sidebar
nmap <C-e> :NERDTreeFocus<cr>
" These create newlines like o and O but stay in normal mode
"nmap zj o<Esc>k
"nmap zk O<Esc>j
imap jk <Esc>
nmap <S-Enter> O<Esc>
nmap <CR> o<Esc>
" Quit visual mode
vnoremap v <Esc>

nnoremap <Esc> <Esc>:w<CR>
inoremap <Esc> <Esc>:w<CR>
noremap H ^
noremap L $
" Tab operation
nnoremap <leader>l gt
nnoremap <leader>h gT
" mehotd up
nmap [[ <Action>(MethodUp)
nmap ]] <Action>(MethodDown)

nmap gb <Action>(Back)
nmap gD <Action>(GotoTypeDeclaration)
nmap gf <Action>(Forward)
nmap gl <Action>(QuickJavaDoc)
nmap gL <Action>(QuickImplementations)
nmap gn <Action>(GotoNextError)
nmap gp <Action>(GotoPreviousError)
nmap gy <Action>(ShowErrorDescription)


" moving row"
nnoremap <C-j> :m +1<CR>
nnoremap <C-k> :m -2<CR>
vnoremap <C-j> :m +1<CR>
vnoremap <C-k> :m -2<CR>
inoremap <C-j> <Esc>:m +1<CR>gi
inoremap <C-k> <Esc>:m -2<CR>gi
"nerdTree"

let g:NERDTreeMapActivateNode='o'
let g:NERDTreeMapJumpParent='p'

" edit ideavim config
nnoremap <leader>vv :e ~/.ideavimrc<CR>
nnoremap <leader>vr :source ~/.ideavimrc<CR>


" Refactorings
map T <Action>(Refactorings.QuickListPopupAction)
map tr <Action>(RenameElement)
" SurroundWith
map ts <Action>(SurroundWith)
" VSC Popup
nmap tv <Action>(Vcs.QuickListPopupAction)
" Inspectiom
nmap ti <Action>(InspectCode)
map ta <Action>(AnalyzeActionsPopup)
nmap to <Action>(OptimiziImports)

" Closing tabs
nmap <leader>q :action CloseContent<cr>
"nmap <leader>Q :action ReopenClosedTab<cr>
nmap <leader>Q :action CloseAllEditorsButActive<cr>

" Navigation
nmap <leader>L :action RecentLocations<cr>
nmap <leader>g :action GotoDeclaration<cr>
nmap <leader>i :action GotoImplementation<cr>
nmap <leader>u :action FindUsages<cr>
nmap <leader>f :action GotoFile<cr>
nmap <leader>c :action GotoClass<cr>
nmap <leader>s :action GotoSymbol<cr>
nmap <leader>; :action FileStructurePopup<cr>
nmap <leader>d :action ShowErrorDescription<cr>
nmap <leader>I :action SelectIn<cr>
nmap <leader>e :action RecentFiles<cr>
nmap <leader>t :action GotoTest<cr>
nmap <leader>b :action ShowBookmarks<cr>

map <C-N>  <A-N>
map <C-P>  <A-P>
map <C-X>  <A-X>
map g<C-N> <Action>(SelectAllOccurrences)
