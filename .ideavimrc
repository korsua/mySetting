" english auto change
let keep_input_source_in_normal=[ABC]
let keep_input_source_in_normal=ABC
set keep-english-in-normal-and-restore-in-insert

let mapleader = " "
set ignorecase
set smartcase
set visualbell
set number relativenumber
set ignorecase
set smartcase
set noerrorbells
set expandtab
set autoindent
set hlsearch
set incsearch
set ideajoin
set mouse=a
set idearefactormode=keep
set mousefocus
set scollfocus
set scrolloff=3
set highlightedyank

" 3 lines above/below cursor when scrolling
set NERDTree
set surround
set multiple-cursors
set easymotion
set quickscope
set sneak


" essential
imap jk <Esc>
imap ㅓㅏ <Esc>
nmap <S-Enter> O<Esc>
nmap <CR> o<Esc>

noremap H ^
noremap L $

" toggle sidebar
nmap <C-e> :NERDTreeFocus<cr>

" These create newlines like o and O but stay in normal mode

" zen mode
noremap <leader>kz :action ToggleZenMode<CR>

" Quit visual mode
nnoremap <leader>y "+y
nnoremap <leader>p "+p
vnoremap <leader>y "+y
nnoremap Y y$
nnoremap <leader>a ggVG
vnoremap <leader>a ggVG
vnoremap v <Esc>
nnoremap <esc> :noh<cr>:w<cr><esc>
inoremap <Esc> <Esc>:w<CR>
noremap H ^
noremap L $

" Tab operation
nnoremap <leader>l gt
nnoremap <leader>h gT

" mehotd up
nmap [[ <Action>(MethodUp)
nmap ]] <Action>(MethodDown)

" goto Error and Declaration"
nmap gb <Action>(Back)
nmap gD <Action>(GotoTypeDeclaration)
nmap gf <Action>(Forward)
nmap gl <Action>(QuickJavaDoc)
nmap gL <Action>(QuickImplementations)
nmap gn <Action>(GotoNextError)
nmap gp <Action>(GotoPreviousError)
nmap gy <Action>(ShowErrorDescription)

"Editor indent"
nmap > <S-v>:action EditorIndentSelection<cr>
nmap < <S-v>:action EditorUnindentSelection<cr>
vmap > <Action>(EditorIndentSelection)
vmap < <Action>(EditorUnindentSelection)

" moving row"
nnoremap <C-j> :m +1<CR>
nnoremap <C-k> :m -2<CR>
inoremap <C-j> <Esc>:m +1<CR>gi
inoremap <C-k> <Esc>:m -2<CR>gi
vnoremap <C-j> :action MoveStatementDown<CR>
vnoremap <C-k> :action MoveStatementUp<CR>


" Refactorings
map <leader>t <Action>(Refactorings.QuickListPopupAction)
map Tr <Action>(RenameElement)
" SurroundWith
map Ts <Action>(SurroundWith)
" VSC Popup
nmap Tv <Action>(Vcs.QuickListPopupAction)
" Inspectiom
nmap Ti <Action>(InspectCode)
map Ta <Action>(AnalyzeActionsPopup)
nmap To <Action>(OptimiziImports)

" Closing tabs
nmap <leader>q :action CloseContent<cr>
nmap <leader>Q :action CloseAllEditorsButActive<cr>

" edit ideavim config
nnoremap <leader>vv :e ~/.ideavimrc<CR>
nnoremap <leader>vr :source ~/.ideavimrc<CR>

" code Run & Debug
nmap <leader>r :action Run<cr>
nmap <leader>d :Debug<cr>

" Navigation
nmap <leader>L :action RecentLocations<cr>
nmap <leader>g :action GotoDeclaration<cr>
nmap <leader>i :action GotoImplementation<cr>
nmap <leader>u :action FindUsages<cr>
nmap <leader>f :action GotoFile<cr>
nmap <leader>c :action GotoClass<cr>
nmap <leader>s :action GotoSymbol<cr>
nmap <leader>; :action FileStructurePopup<cr>
nmap <leader>I :action SelectIn<cr>
nmap <leader>e :action RecentFiles<cr>
nmap <leader>T :action GotoTest<cr>
nmap <leader>b :action ShowBookmarks<cr>

" multi Cursor
map <C-N>  <A-N>
map <C-P>  <A-P>
map <C-X>  <A-X>
map g<C-N> <Action>(SelectAllOccurrences)
nnoremap <C-S-5> :action EditorMatchBrace<CR>
